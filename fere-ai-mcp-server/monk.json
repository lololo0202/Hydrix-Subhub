{
    "openapi": "3.1.0",
    "info": {
        "title": "0xMONK",
        "description": "A trading agent is a sentient agent that performs trades autonomously. This\nagent is in charge of the decisions it takes.\nYou can provide prompts and personas which defines its character and trading\ndecisions.\n\n:::tip\nWe recommend doing a simulation of your agents (by enabling it in `dry run` mode)\nbefore making it perform on chain trades\n:::\n\nThe Trading API provides endpoints for managing trading agents, monitoring portfolios,\nand accessing trading signals.\nThis documentation covers authentication, endpoints, and\nincludes examples in Python and Node.js.\n\n## Examples Repo\n\nComplete working examples in Python and TypeScript are available on\n[fere-ai/agentic-examples](https://github.com/fere-ai/agentic-examples).\nClone and use them for a quick start.\n\n## Base URL\nAll endpoints are relative to: `https://api.fereai.xyz/ta/`\n\n## Architecture\n\n![FereAI 0xMONK Architecture Diagram](https://d17amglcmpxxe9.cloudfront.net/assets/docs/archi_monk.png)\n\n- Highly Scalable. Run 10,000 + agents concurrently.\n- Quick Onboarding. Start your trading agent in minutes.\n\n   ",
        "version": "2.0.0"
    },
    "servers": [
        {
            "url": "https://api.fereai.xyz/ta",
            "description": "Production Server"
        }
    ],
    "paths": {
        "/agent/": {
            "put": {
                "tags": [
                    "lifecycle"
                ],
                "summary": "Create an agent",
                "description": "Creates an agent and it's portfolio. The response contains the\n  agent's details including private keys for Solana and EVM. This should be\n  shown to frontend or stored securely. This won't be shown again.\n\n  **NOTE**:\n  1. The percentages are represented as a floating value between 0 and 1. Both\n  inclusive. This applies to following fields\n    - `max_investment_per_session`\n    - `stop_loss`\n    - `trailing_stop_loss`\n    - `take_profit`",
                "operationId": "1_create_agent",
                "parameters": [
                    {
                        "name": "x-fere-userid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Fere-Userid"
                        }
                    },
                    {
                        "name": "x-auth-tg-userid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Auth-Tg-Userid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AgentCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AgentCreateResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/agent/{agent_id}/": {
            "patch": {
                "tags": [
                    "lifecycle"
                ],
                "summary": "Update an agent",
                "description": "Update an agent. The agent's details can be updated using this endpoint.\n    The agent's ID should be provided in the path parameter and the details to be updated\n    should be provided in the request body. The agent's ID cannot be updated.\n    Every field is optional, only those fields which have a value will be updated.\n\n    **NOTE**:\n    1. The percentages are represented as a floating value between 0 and 1. Both\n    inclusive. This applies to following fields\n      - `max_investment_per_session`\n      - `stop_loss`\n      - `trailing_stop_loss`\n      - `take_profit`",
                "operationId": "2_update_agent",
                "parameters": [
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Agent Id"
                        }
                    },
                    {
                        "name": "x-fere-userid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Fere-Userid"
                        }
                    },
                    {
                        "name": "x-auth-tg-userid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Auth-Tg-Userid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AgentUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AgentResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "lifecycle"
                ],
                "summary": "Delete an agent",
                "description": "Delete an agent. The agent's ID should be provided in the path parameter.\n  This will delete the agent and all related data including trades, holdings, and portfolio",
                "operationId": "5_delete_agent",
                "parameters": [
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Agent Id"
                        }
                    },
                    {
                        "name": "x-fere-userid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Fere-Userid"
                        }
                    },
                    {
                        "name": "x-auth-tg-userid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Auth-Tg-Userid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/agent/parents/{agent_id}/": {
            "patch": {
                "tags": [
                    "lifecycle"
                ],
                "summary": "Add parent(s) to an agent",
                "description": "A helper endpoint to add parents to an agent. This will only add new parent(s)\n  and will not do any changes to the existing parent(s). If a parent passed here already\n  exists, it will have no impact on that.",
                "operationId": "3_add_agent_parents",
                "parameters": [
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Agent Id"
                        }
                    },
                    {
                        "name": "x-fere-userid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Fere-Userid"
                        }
                    },
                    {
                        "name": "x-auth-tg-userid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Auth-Tg-Userid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateParentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AgentResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "lifecycle"
                ],
                "summary": "Remove parent(s) from an agent",
                "description": "A helper endpoint to remove parent(s) from an agent. This will only remove the\n  parent(s) passed here and will not do any changes to the existing parent(s). If a parent passed\n  here doesn't exist, it will have no impact on that.",
                "operationId": "4_delete_agent_parents",
                "parameters": [
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Agent Id"
                        }
                    },
                    {
                        "name": "x-fere-userid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Fere-Userid"
                        }
                    },
                    {
                        "name": "x-auth-tg-userid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Auth-Tg-Userid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateParentRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AgentResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/agent/tg": {
            "get": {
                "tags": [
                    "tg"
                ],
                "summary": "Get all agents of a user using telegram id",
                "operationId": "11_get_agents_using_tg_userid",
                "parameters": [
                    {
                        "name": "x-fere-userid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Fere-Userid"
                        }
                    },
                    {
                        "name": "x-auth-tg-userid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Auth-Tg-Userid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CheckUserAndGetAgentsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/agent/{agent_id}": {
            "get": {
                "tags": [
                    "lifecycle"
                ],
                "summary": "Get an agent by it's ID",
                "operationId": "6_get_agent",
                "parameters": [
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Agent Id"
                        }
                    },
                    {
                        "name": "x-fere-userid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Fere-Userid"
                        }
                    },
                    {
                        "name": "x-auth-tg-userid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Auth-Tg-Userid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AgentResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/agent/user/{user_id}/": {
            "get": {
                "tags": [
                    "lifecycle"
                ],
                "summary": "Get all agents of a user",
                "operationId": "7_get_agents",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "User Id"
                        }
                    },
                    {
                        "name": "x-fere-userid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Fere-Userid"
                        }
                    },
                    {
                        "name": "x-auth-tg-userid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Auth-Tg-Userid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AgentResponse"
                                    },
                                    "title": "Response 7 Get Agents"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/agent/buy/{agent_id}/": {
            "get": {
                "summary": "Get agent's Buy recommendations",
                "description": "Get the buy recommendations for an agent. This endpoint lists\nthe tokens for which this agent made a BUY call. It keeps a track of the peak\nthat happened after the agent made this call. This endpoint is useful to know\nthe maximum potential profit that could have been made on this buy call.",
                "operationId": "11_get_agent_buy_recos",
                "deprecated": true,
                "parameters": [
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Agent Id"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "sort_column",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "The column to sort by. Available options are `noticed_at`, `peaked_at`, `profit_per_usd`, `profit_per_native`",
                            "default": "profit_per_usd",
                            "title": "Sort Column"
                        },
                        "description": "The column to sort by. Available options are `noticed_at`, `peaked_at`, `profit_per_usd`, `profit_per_native`"
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Sort order. Available options are `desc` and `asc`",
                            "default": "desc",
                            "title": "Sort Order"
                        },
                        "description": "Sort order. Available options are `desc` and `asc`"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Number of records per page. Default is 100. Max is 100.",
                            "default": 100,
                            "title": "Page Size"
                        },
                        "description": "Number of records per page. Default is 100. Max is 100."
                    },
                    {
                        "name": "noticed_at_threshold_hrs",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by noticed_at threshold in hours. If specified, only\n    those calls that have been made in last `noticed_at_threshold_hrs` hours will be returned",
                            "title": "Noticed At Threshold Hrs"
                        },
                        "description": "Filter by noticed_at threshold in hours. If specified, only\n    those calls that have been made in last `noticed_at_threshold_hrs` hours will be returned"
                    },
                    {
                        "name": "peaked_at_threshold_hrs",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by peaked_at threshold in hours. If specified, only\n    those calls that have been peaked in last `peaked_at_threshold_hrs` hours will be returned",
                            "title": "Peaked At Threshold Hrs"
                        },
                        "description": "Filter by peaked_at threshold in hours. If specified, only\n    those calls that have been peaked in last `peaked_at_threshold_hrs` hours will be returned"
                    },
                    {
                        "name": "sort_by_latest_signal",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "If true, sorts the results based on the latest holding's bought_at timestamp.\n    Decisions with more recent holdings will appear first.",
                            "default": true,
                            "title": "Sort By Latest Signal"
                        },
                        "description": "If true, sorts the results based on the latest holding's bought_at timestamp.\n    Decisions with more recent holdings will appear first."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedBuyDecisionsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "trades"
                ],
                "summary": "Create a Buy for the agent",
                "description": "Creates a buy instruction for the agent.",
                "operationId": "14_buy_tokens",
                "parameters": [
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Agent Id"
                        }
                    },
                    {
                        "name": "x-fere-userid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Fere-Userid"
                        }
                    },
                    {
                        "name": "x-auth-tg-userid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Auth-Tg-Userid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AgentBuyRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/agent/calls/{agent_id}/": {
            "get": {
                "tags": [
                    "trades"
                ],
                "summary": "Get agent's calls",
                "description": "Get the calls for an agent. This endpoint lists\nthe tokens for which this agent made a BUY call. It keeps a track of the peak\nthat happened after the agent made this call. This endpoint is useful to know\nthe maximum potential profit that could have been made on this buy call.",
                "operationId": "8_get_agent_calls",
                "parameters": [
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Agent Id"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "sort_column",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "The column to sort by. Available options are `noticed_at`, `peaked_at`, `profit_per_usd`, `profit_per_native`",
                            "default": "profit_per_usd",
                            "title": "Sort Column"
                        },
                        "description": "The column to sort by. Available options are `noticed_at`, `peaked_at`, `profit_per_usd`, `profit_per_native`"
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "description": "Sort order. Available options are `desc` and `asc`",
                            "default": "desc",
                            "title": "Sort Order"
                        },
                        "description": "Sort order. Available options are `desc` and `asc`"
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "description": "Number of records per page. Default is 100. Max is 100.",
                            "default": 100,
                            "title": "Page Size"
                        },
                        "description": "Number of records per page. Default is 100. Max is 100."
                    },
                    {
                        "name": "noticed_at_threshold_hrs",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by noticed_at threshold in hours. If specified, only\n    those calls that have been made in last `noticed_at_threshold_hrs` hours will be returned",
                            "title": "Noticed At Threshold Hrs"
                        },
                        "description": "Filter by noticed_at threshold in hours. If specified, only\n    those calls that have been made in last `noticed_at_threshold_hrs` hours will be returned"
                    },
                    {
                        "name": "peaked_at_threshold_hrs",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Filter by peaked_at threshold in hours. If specified, only\n    those calls that have been peaked in last `peaked_at_threshold_hrs` hours will be returned",
                            "title": "Peaked At Threshold Hrs"
                        },
                        "description": "Filter by peaked_at threshold in hours. If specified, only\n    those calls that have been peaked in last `peaked_at_threshold_hrs` hours will be returned"
                    },
                    {
                        "name": "sort_by_latest_signal",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "description": "If true, sorts the results based on the latest holding's bought_at timestamp.\n    Decisions with more recent holdings will appear first.",
                            "default": true,
                            "title": "Sort By Latest Signal"
                        },
                        "description": "If true, sorts the results based on the latest holding's bought_at timestamp.\n    Decisions with more recent holdings will appear first."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedBuyDecisionsResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/agent/portfolio/{agent_id}/": {
            "get": {
                "tags": [
                    "trades"
                ],
                "summary": "Get agent's portfolio",
                "operationId": "9_get_agent_portfolio",
                "parameters": [
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Agent Id"
                        }
                    },
                    {
                        "name": "x-fere-userid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Fere-Userid"
                        }
                    },
                    {
                        "name": "x-auth-tg-userid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Auth-Tg-Userid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PortfolioResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/agent/holdings/{agent_id}/": {
            "get": {
                "tags": [
                    "trades"
                ],
                "summary": "Get agent's holdings",
                "operationId": "10_get_agent_holdings",
                "parameters": [
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Agent Id"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "integer"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "description": "Number of records per page. Default is 100. Max is 100.",
                            "default": 100,
                            "title": "Page Size"
                        },
                        "description": "Number of records per page. Default is 100. Max is 100."
                    },
                    {
                        "name": "x-fere-userid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Fere-Userid"
                        }
                    },
                    {
                        "name": "x-auth-tg-userid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Auth-Tg-Userid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/HoldingResponse"
                                    },
                                    "title": "Response 10 Get Agent Holdings"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/agent/trades/{agent_id}/": {
            "get": {
                "tags": [
                    "trades"
                ],
                "summary": "Get agent's trades",
                "description": "Gets the trades of agent grouped by base_address. For each base_address,\n    you get the pool info, current holdings status, and all trades performed ordered by\n    time in descending order. The holdings are paginated with page_size defaulting to 100.",
                "operationId": "11_get_agent_trades_v2",
                "parameters": [
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Agent Id"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    },
                    {
                        "name": "page_size",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "exclusiveMaximum": 100,
                            "exclusiveMinimum": 0,
                            "description": "Number of records per page. Default is 100. Max is 100.",
                            "default": 30,
                            "title": "Page Size"
                        },
                        "description": "Number of records per page. Default is 100. Max is 100."
                    },
                    {
                        "name": "x-fere-userid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Fere-Userid"
                        }
                    },
                    {
                        "name": "x-auth-tg-userid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Auth-Tg-Userid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GroupedTradesResponse"
                                    },
                                    "title": "Response 11 Get Agent Trades V2"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/agent/sell/{agent_id}/{ca}/{quantity}/": {
            "post": {
                "tags": [
                    "trades"
                ],
                "summary": "Perform a Sell",
                "description": "Create a sell instruction for Agent. The agent's ID (`agent_id`) should be\n     provided in the path parameter. Along with the `ca` (contract address) and the `quantity` to be sold.\n\n     `Quantity` can be either `all` or a number > 0. Quantity is the amount of tokens\n     to sell (in lamports for Solana or wei for Base). If `all` is provided, all tokens will be sold.\n\n     This call simply _schedules_ the sell. The actual sell will be executed\n     asynchronously. The response will contain the task ID which can be used to\n     check the status of the task.\n\n     To check status of the task, use the `/task/status/{task_id}/` endpoint.",
                "operationId": "12_sell_tokens",
                "parameters": [
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Agent Id"
                        }
                    },
                    {
                        "name": "ca",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Ca"
                        }
                    },
                    {
                        "name": "quantity",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Quantity"
                        }
                    },
                    {
                        "name": "x-fere-userid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Fere-Userid"
                        }
                    },
                    {
                        "name": "x-auth-tg-userid",
                        "in": "header",
                        "required": false,
                        "schema": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "null"
                                }
                            ],
                            "title": "X-Auth-Tg-Userid"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AgentSellRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response 12 Sell Tokens"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/agent/decisions/{agent_id}/": {
            "get": {
                "tags": [
                    "trades"
                ],
                "summary": "Get agent's decisions",
                "description": "Gets the decisions for all pools this agent has evaluated.\nThis is a paginated response. Each page has 100 entries. In response, the\n`decision` field is an enum and it means the following:\n\n- SELL = 0\n- BUY = 1\n- HOLD = 2\n- PASS = 3",
                "operationId": "15_get_agent_decisions",
                "parameters": [
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Agent Id"
                        }
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "title": "Page"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TradeRecommendationsResponse"
                                    },
                                    "title": "Response 15 Get Agent Decisions"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/agent/sync/{agent_id}/": {
            "patch": {
                "tags": [
                    "lifecycle"
                ],
                "summary": "Sync onchain data for the agent",
                "description": "Triggers onchain data sync for Solana agents. Currently only supports Solana chain.",
                "operationId": "12_sync_agent_onchain",
                "parameters": [
                    {
                        "name": "agent_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "Agent Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    },
                                    "title": "Response 12 Sync Agent Onchain"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/task/status/{task_id}/": {
            "get": {
                "tags": [
                    "task"
                ],
                "summary": "Get status of a task",
                "description": "Get the status of a task using the task ID.\n\n  The status can be one of\n  - PENDING\n  - FAILURE\n  - SUCCESS\n\n  Any additional details will be present in the `result` field. The frontend/caller API\n  should be polling for task results every 20 - 30s. It should also update the user\n  accordingly based on the status.https://docs.fereai.xyz/docs/api/Monk/sell-tokens-agent-agent-id-sell-holding-id-quantity-post\n\n  Output\n\n  ```json\n  {\n    \"task_id\": \"2dc1ec2a-9f48-4fb3-bf72-44b2adb9190f\",\n    \"status\": \"FAILURE\",\n    \"result\": {}\n  }```\n\n  Output of a sell task that succeeded:\n\n  ```json\n  {\n  \"task_id\": \"335612b9-b495-4925-8c51-775ceeaf1d92\",\n  \"status\": \"SUCCESS\",\n  \"result\": \"{\"created_at\":\"2024-11-26T07:12:40\",\"agent_id\":\"72a4fdae-6825-4896-be90-4bf9ed8e6261\",\"base_address\":\"KENJSUYLASHUMfHyy5o4Hp2FdNqZg1AsUPhfH2kYvEP\",\"pool_name\":\"GRIFFAIN / SOL\",\"decision\":0,\"price_usd\":0.00719506860116107,\"price_sol\":0.0000303826727689711,\"in_amount\":592788488.0,\"out_amount\":17945779.0,\"gas_fee\":127000.0,\"jito_fee\":80000.0,\"other_amount_threshold\":17856051.0,\"reason\":\"Sell decision executed manually.\",\"future_action\":\"Re-evaluate if there's an entry criteria\",\"profit_sol\":-0.040081023001594954,\"profit_usd\":-10.962148394048281,\"profit_percentage\":-68.99633864046619,\"txn\":\"https://solscan.io/tx/627nNaCEJ2jqBUpdrkgHvqmMm9DHexTkrY98E5pMMe9GvUeZMkND1Rf5GnYqCMjazypA3TAg36PqEBkSyq4rHSPH\",\"dry_run\":true}\"\n}\n  ```",
                "operationId": "get_task_status_task_status__task_id___get",
                "parameters": [
                    {
                        "name": "task_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Task Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wallet-details/monk/tg/{auth_tg_userid}": {
            "get": {
                "tags": [
                    "wallet-details"
                ],
                "summary": "Tg Wallet Details",
                "description": "Get Wallet Details of the Sentient Trading Agent",
                "operationId": "tg_wallet_details_wallet_details_monk_tg__auth_tg_userid__get",
                "parameters": [
                    {
                        "name": "auth_tg_userid",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "title": "Auth Tg Userid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/src__schema__WalletDetails"
                                    },
                                    "title": "Response Tg Wallet Details Wallet Details Monk Tg  Auth Tg Userid  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/wallet-details/monk/{user_id}": {
            "get": {
                "tags": [
                    "wallet-details"
                ],
                "summary": "Wallet Details",
                "description": "Get Wallet Details of the Sentient Trading Agent",
                "operationId": "wallet_details_wallet_details_monk__user_id__get",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "User Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "$ref": "#/components/schemas/src__schema__WalletDetails"
                                    },
                                    "title": "Response Wallet Details Wallet Details Monk  User Id  Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/hero-agents/": {
            "get": {
                "tags": [
                    "Monk"
                ],
                "summary": "Get Agents",
                "description": "Get all Monk Autonomous Agents",
                "operationId": "1_get_autonomous_agents",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "items": {
                                        "$ref": "#/components/schemas/HeroAgentsResponse"
                                    },
                                    "type": "array",
                                    "title": "Response 1 Get Autonomous Agents"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AgentBuyRequest": {
                "properties": {
                    "send_notification": {
                        "anyOf": [
                            {
                                "type": "string",
                                "enum": [
                                    "telegram",
                                    "mail"
                                ]
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Send Notification.",
                        "description": "Send Notification to the user. This can be either `telegram` or `mail`.\n    "
                    },
                    "ca": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Contract Address.",
                        "description": "Contract Address of the token to buy. When this is provided\n    we will find the pool which has the pair with native currency of the chain\n    and use that pool to buy from."
                    },
                    "value_usd": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Value in USD.",
                        "description": "Value in USD to buy the tokens. If this is provided then\n    the `quantity` will be calculated based on this value.\n    "
                    },
                    "slippage": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Slippage.",
                        "description": "Slippage tolerance for the trade. This is the maximum\n    percentage by which the trade can deviate from the current price.\n    ",
                        "default": 2
                    },
                    "rebuy": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Rebuy.",
                        "description": "If True, the agent will rebuy the token even if it's already\n    bought. This is useful when the agent wants to increase the holding of the token.or when the user is manually rebuying again."
                    }
                },
                "type": "object",
                "title": "AgentBuyRequest"
            },
            "AgentCreateRequest": {
                "properties": {
                    "user_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Your UUID at FereAI.",
                        "description": "Your UUID at FereAI. You will get this in the response to your API Request.",
                        "examples": [
                            "f7b3b3b3-4b3b-4b3b-4b3b-4b3b3b3b3b3b"
                        ]
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name of the Agent.",
                        "description": "Name of the Agent. If none is provided, a default name will be generated",
                        "examples": [
                            "My First Agent"
                        ]
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description of the Agent.",
                        "description": "Description of the Agent.",
                        "examples": [
                            "This is my first agent. I am excited to see how it performs."
                        ]
                    },
                    "persona": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Persona of the Agent.",
                        "description": "Persona of the Agent."
                    },
                    "data_source": {
                        "anyOf": [
                            {
                                "type": "string",
                                "enum": [
                                    "trending",
                                    "latest"
                                ]
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data Source of the Agent.",
                        "description": "Data Source of the Agent. It can either be `trending` or `latest`.\n    In trending mode, the agent will look for trending memecoins.\n    In latest mode, the agent will look for the latest launched memecoins.\n\n    This can be optional if agent is in COPY_TRADE mode. If set, this field has\n    no impact in COPY_TRADE mode."
                    },
                    "decision_prompt_pool": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Instructions for taking decision on a token.",
                        "description": "Your agent will use these instructions to take decision on a token.\n    The decisions can be `buy`, `sell`, `hold` or `pass`.\n    Make sure to keep this description as detailed and clear as possible.\n    "
                    },
                    "decision_prompt_portfolio": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Instructions for taking decision on a portfolio.",
                        "description": "Your agent will use these instructions to revise the deicsions\n    it made on a token.\n    This should be broader set of instructions to guide agent.\n\n    NOTE: This is currently not implemented.\n    "
                    },
                    "chain": {
                        "type": "string",
                        "title": "Blockchain Network",
                        "description": "The blockchain network to use for trading.\n    Can be either 'SOLANA','BASE' or 'ARBITRUM'. SOLANA is the default network.\n    - SOLANA: Use Solana blockchain for trading\n    - ARBITRUM: Use Arbitrum blockchain for trading\n    - BASE: Use Base blockchain for trading",
                        "default": "solana",
                        "examples": [
                            "SOLANA",
                            "BASE",
                            "ARBITRUM"
                        ]
                    },
                    "twitter_username": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Your Bot's Username.",
                        "description": "Your Twitter Username. In the future this will be used so that\n    your bot can reply and interact on twitter.\n    ",
                        "examples": [
                            "@my_twitter_username"
                        ]
                    },
                    "fc_username": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Your FereAI Username.",
                        "description": "Your FereAI Username. In the future this will be used so that\n    your bot can reply and interact on FereAI.\n    ",
                        "examples": [
                            "farcaster_username"
                        ]
                    },
                    "dry_run": {
                        "type": "boolean",
                        "title": "Dry Run Mode.",
                        "description": "If True, your agent will only simulate the trades and will not\n    actually buy or sell any tokens.\n    ",
                        "default": true,
                        "examples": [
                            true,
                            false
                        ]
                    },
                    "dry_run_initial_usd": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Initial USD for Dry Run.",
                        "description": "Initial USD amount for Dry Run. This will be used to simulate\n    the trades.\n    ",
                        "examples": [
                            1000
                        ]
                    },
                    "dry_run_initial_native": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Initial Native Token for Dry Run.",
                        "description": "Initial Native Token amount for Dry Run. This will be used to simulate\n    the trades.\n    ",
                        "examples": [
                            10
                        ]
                    },
                    "max_investment_per_session": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Investment per Session.",
                        "description": "Maximum amount of USD your agent can invest in a single session.\n    ",
                        "deprecated": true,
                        "examples": [
                            0.8
                        ]
                    },
                    "stop_loss": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Stop Loss Percentage.",
                        "description": "If the profit goes below this percentage, the agent will sell the token.\n    ",
                        "examples": [
                            0.5
                        ]
                    },
                    "trailing_stop_loss": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Trailing Stop Loss Percentage.",
                        "description": "If the profit goes below this percentage from the peak, the agent will sell the token.\n    ",
                        "examples": [
                            0.3
                        ]
                    },
                    "take_profit": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Take Profit Percentage.",
                        "description": "If the profit goes above this percentage, the agent will sell the token.\n    ",
                        "examples": [
                            0.7
                        ]
                    },
                    "mode": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Mode of the Agent.",
                        "description": "Mode of the Agent. It can either be `MANUAL` (`0`), `COPY_TRADE` (`1`) or `AUTONOMOUS` (`2`).\n    In MANUAL mode, the agent will perform actions based on the buy/sell calls done by the user.\n    In COPY_TRADE mode, the agent will copy the trades of another agent. This can be set by setting `parent_ids` field.\n    In AUTONOMOUS mode, the agent will take decisions autonomously.\n    ",
                        "default": "MANUAL",
                        "examples": [
                            "MANUAL",
                            "COPY_TRADE",
                            "AUTONOMOUS"
                        ]
                    },
                    "parent_ids": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Parent Agents.",
                        "description": "List of Parent Agents. This is used when the agent is in COPY_TRADE mode.\n    The agent will copy the trades of these parent agents.\n    "
                    },
                    "investment_for_buy": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Investment per buy in Native currency (SOL or ETH)",
                        "description": "The investment this agent will do per buy. It is in native amount.\n    For Solana agents, it's the SOL that will be spent. For EVM agents, its the\n    ETH that will be spent per buy",
                        "examples": [
                            1
                        ]
                    },
                    "investment_for_buy_usd": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Investment per buy in USD",
                        "description": "The investment this agent will do per buy. It is in USD amount.\n    ",
                        "examples": [
                            100
                        ]
                    }
                },
                "type": "object",
                "title": "AgentCreateRequest"
            },
            "AgentCreateResponse": {
                "properties": {
                    "user_id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Your UUID at FereAI.",
                        "description": "Your UUID at FereAI. You will get this in the response to your API Request.",
                        "examples": [
                            "f7b3b3b3-4b3b-4b3b-4b3b-4b3b3b3b3b3b"
                        ]
                    },
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name of the Agent.",
                        "description": "Name of the Agent. If none is provided, a default name will be generated",
                        "examples": [
                            "My First Agent"
                        ]
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description of the Agent.",
                        "description": "Description of the Agent.",
                        "examples": [
                            "This is my first agent. I am excited to see how it performs."
                        ]
                    },
                    "persona": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Persona of the Agent.",
                        "description": "Persona of the Agent."
                    },
                    "data_source": {
                        "anyOf": [
                            {
                                "type": "string",
                                "enum": [
                                    "trending",
                                    "latest"
                                ]
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data Source of the Agent.",
                        "description": "Data Source of the Agent. It can either be `trending` or `latest`.\n    In trending mode, the agent will look for trending memecoins.\n    In latest mode, the agent will look for the latest launched memecoins.\n\n    This can be optional if agent is in COPY_TRADE mode. If set, this field has\n    no impact in COPY_TRADE mode."
                    },
                    "decision_prompt_pool": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Instructions for taking decision on a token.",
                        "description": "Your agent will use these instructions to take decision on a token.\n    The decisions can be `buy`, `sell`, `hold` or `pass`.\n    Make sure to keep this description as detailed and clear as possible.\n    "
                    },
                    "decision_prompt_portfolio": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Instructions for taking decision on a portfolio.",
                        "description": "Your agent will use these instructions to revise the deicsions\n    it made on a token.\n    This should be broader set of instructions to guide agent.\n\n    NOTE: This is currently not implemented.\n    "
                    },
                    "chain": {
                        "type": "string",
                        "title": "Blockchain Network",
                        "description": "The blockchain network to use for trading.\n    Can be either 'SOLANA','BASE' or 'ARBITRUM'. SOLANA is the default network.\n    - SOLANA: Use Solana blockchain for trading\n    - ARBITRUM: Use Arbitrum blockchain for trading\n    - BASE: Use Base blockchain for trading",
                        "default": "solana",
                        "examples": [
                            "SOLANA",
                            "BASE",
                            "ARBITRUM"
                        ]
                    },
                    "twitter_username": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Your Bot's Username.",
                        "description": "Your Twitter Username. In the future this will be used so that\n    your bot can reply and interact on twitter.\n    ",
                        "examples": [
                            "@my_twitter_username"
                        ]
                    },
                    "fc_username": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Your FereAI Username.",
                        "description": "Your FereAI Username. In the future this will be used so that\n    your bot can reply and interact on FereAI.\n    ",
                        "examples": [
                            "farcaster_username"
                        ]
                    },
                    "dry_run": {
                        "type": "boolean",
                        "title": "Dry Run Mode.",
                        "description": "If True, your agent will only simulate the trades and will not\n    actually buy or sell any tokens.\n    ",
                        "default": true,
                        "examples": [
                            true,
                            false
                        ]
                    },
                    "dry_run_initial_usd": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Initial USD for Dry Run.",
                        "description": "Initial USD amount for Dry Run. This will be used to simulate\n    the trades.\n    ",
                        "examples": [
                            1000
                        ]
                    },
                    "dry_run_initial_native": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Initial Native Token for Dry Run.",
                        "description": "Initial Native Token amount for Dry Run. This will be used to simulate\n    the trades.\n    ",
                        "examples": [
                            10
                        ]
                    },
                    "max_investment_per_session": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Investment per Session.",
                        "description": "Maximum amount of USD your agent can invest in a single session.\n    ",
                        "deprecated": true,
                        "examples": [
                            0.8
                        ]
                    },
                    "stop_loss": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Stop Loss Percentage.",
                        "description": "If the profit goes below this percentage, the agent will sell the token.\n    ",
                        "examples": [
                            0.5
                        ]
                    },
                    "trailing_stop_loss": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Trailing Stop Loss Percentage.",
                        "description": "If the profit goes below this percentage from the peak, the agent will sell the token.\n    ",
                        "examples": [
                            0.3
                        ]
                    },
                    "take_profit": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Take Profit Percentage.",
                        "description": "If the profit goes above this percentage, the agent will sell the token.\n    ",
                        "examples": [
                            0.7
                        ]
                    },
                    "mode": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Mode of the Agent.",
                        "description": "Mode of the Agent. It can either be `MANUAL` (`0`), `COPY_TRADE` (`1`) or `AUTONOMOUS` (`2`).\n    In MANUAL mode, the agent will perform actions based on the buy/sell calls done by the user.\n    In COPY_TRADE mode, the agent will copy the trades of another agent. This can be set by setting `parent_ids` field.\n    In AUTONOMOUS mode, the agent will take decisions autonomously.\n    ",
                        "default": "MANUAL",
                        "examples": [
                            "MANUAL",
                            "COPY_TRADE",
                            "AUTONOMOUS"
                        ]
                    },
                    "parent_ids": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Parent Agents.",
                        "description": "List of Parent Agents. This is used when the agent is in COPY_TRADE mode.\n    The agent will copy the trades of these parent agents.\n    "
                    },
                    "investment_for_buy": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Investment per buy in Native currency (SOL or ETH)",
                        "description": "The investment this agent will do per buy. It is in native amount.\n    For Solana agents, it's the SOL that will be spent. For EVM agents, its the\n    ETH that will be spent per buy",
                        "examples": [
                            1
                        ]
                    },
                    "investment_for_buy_usd": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Investment per buy in USD",
                        "description": "The investment this agent will do per buy. It is in USD amount.\n    ",
                        "examples": [
                            100
                        ]
                    },
                    "id": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "uuid"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Agent ID.",
                        "description": "Agent ID."
                    },
                    "wallet": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/src__controllers__schema__WalletDetails"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Wallet Details.",
                        "description": "Wallet Details."
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active.",
                        "description": "Is Active.",
                        "default": true
                    },
                    "parents": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/AgentCreateResponse"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Parent Agents.",
                        "description": "List of Parent Agents. This is used when the agent is in COPY_TRADE mode.\n    The agent will copy the trades of these parent agents.\n    "
                    }
                },
                "type": "object",
                "title": "AgentCreateResponse"
            },
            "AgentResponse": {
                "properties": {
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Your UUID at FereAI.",
                        "description": "Your UUID at FereAI. You will get this in the response to your API Request."
                    },
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Agent ID.",
                        "description": "Agent ID."
                    },
                    "name": {
                        "type": "string",
                        "title": "Name of the Agent.",
                        "description": "Name of the Agent."
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description of the Agent.",
                        "description": "Description of the Agent."
                    },
                    "persona": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Persona of the Agent.",
                        "description": "Persona of the Agent."
                    },
                    "chain": {
                        "type": "string",
                        "title": "Blockchain Network",
                        "description": "The blockchain network to use for trading.\n    Can be either 'SOLANA','BASE' or 'ARBITRUM'. BASE is the default network.\n    - SOLANA: Use Solana blockchain for trading\n    - ARBITRUM: Use Arbitrum blockchain for trading\n    - BASE: Use Base blockchain for trading",
                        "default": "base"
                    },
                    "data_source": {
                        "type": "string",
                        "title": "Data Source of the Agent.",
                        "description": "Data Source of the Agent. It can either be `trending` or `latest`.\n    In trending mode, the agent will look for trending memecoins.\n    In latest mode, the agent will look for the latest launched memecoins."
                    },
                    "decision_prompt_pool": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Instructions for taking decision on a token.",
                        "description": "Your agent will use these instructions to take decision on a token.\n    The decisions can be `buy`, `sell`, `hold` or `pass`.\n    Make sure to keep this description as detailed and clear as possible.\n    "
                    },
                    "decision_prompt_portfolio": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Instructions for taking decision on a portfolio.",
                        "description": "Your agent will use these instructions to revise the deicsions\n    it made on a token.\n    This should be broader set of instructions to guide agent.\n\n    NOTE: This is currently not implemented.\n    "
                    },
                    "twitter_username": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Your Bot's Username.",
                        "description": "Your Twitter Username. In the future this will be used so that\n    your bot can reply and interact on twitter.\n    "
                    },
                    "fc_username": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Your FereAI Username.",
                        "description": "Your FereAI Username. In the future this will be used so that\n    your bot can reply and interact on FereAI.\n    "
                    },
                    "dry_run": {
                        "type": "boolean",
                        "title": "Dry Run Mode.",
                        "description": "If True, your agent will only simulate the trades and will not\n    actually buy or sell any tokens.\n    ",
                        "default": true
                    },
                    "dry_run_initial_usd": {
                        "type": "number",
                        "title": "Initial USD for Dry Run.",
                        "description": "Initial USD amount for Dry Run. This will be used to simulate\n    the trades.\n    ",
                        "default": 1000
                    },
                    "address": {
                        "type": "string",
                        "title": "Address of the agent.",
                        "description": "Onchain Address of the Agent. This is specific to the chain on which agent was created."
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active.",
                        "description": "Is Active.",
                        "default": true
                    },
                    "max_investment_per_session": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Investment per Session.",
                        "description": "Maximum amount of USD your agent can invest in a single session.\n    "
                    },
                    "stop_loss": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Stop Loss Percentage.",
                        "description": "If the profit goes below this percentage, the agent will sell the token.\n    "
                    },
                    "trailing_stop_loss": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Trailing Stop Loss Percentage.",
                        "description": "If the profit goes below this percentage from the peak, the agent will sell the token.\n    "
                    },
                    "take_profit": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Take Profit Percentage.",
                        "description": "If the profit goes above this percentage, the agent will sell the token.\n    "
                    },
                    "mode": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Mode of the Agent.",
                        "description": "Mode of the Agent. It can either be `MANUAL` (`0`), `COPY_TRADE` (`1`) or `AUTONOMOUS` (`2`).\n    In MANUAL mode, the agent will take decisions based on the instructions provided by the user.\n    In COPY_TRADE mode, the agent will copy the trades of another agent.\n    In AUTONOMOUS mode, the agent will take decisions autonomously.\n    ",
                        "default": "MANUAL"
                    },
                    "parents": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/AgentResponse"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Parent Agents.",
                        "description": "List of Parent Agents. This is used when the agent is in COPY_TRADE mode.\n    The agent will copy the trades of these parent agents.\n    "
                    },
                    "investment_for_buy": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Investment per buy in Native currency (SOL or ETH)",
                        "description": "The investment this agent will do per buy. It is in native amount.\n    For Solana agents, it's the SOL that will be spent. For EVM agents, its the\n    ETH that will be spent per buy"
                    },
                    "investment_for_buy_usd": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Investment per buy in USD",
                        "description": "The investment this agent will do per buy. It is in USD amount.\n    "
                    }
                },
                "type": "object",
                "title": "AgentResponse"
            },
            "AgentSellRequest": {
                "properties": {
                    "send_notification": {
                        "anyOf": [
                            {
                                "type": "string",
                                "enum": [
                                    "telegram",
                                    "mail"
                                ]
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Send Notification.",
                        "description": "Send Notification to the user. This can be either `telegram` or `mail`.\n    "
                    }
                },
                "type": "object",
                "title": "AgentSellRequest"
            },
            "AgentUpdateRequest": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name of the Agent.",
                        "description": "Name of the Agent."
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description of the Agent.",
                        "description": "Description of the Agent."
                    },
                    "persona": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Persona of the Agent.",
                        "description": "Persona of the Agent."
                    },
                    "data_source": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data Source of the Agent.",
                        "description": "Data Source of the Agent. It can either be `trending` or `latest`.\n    In trending mode, the agent will look for trending memecoins.\n    In latest mode, the agent will look for the latest launched memecoins."
                    },
                    "decision_prompt_pool": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Instructions for taking decision on a token.",
                        "description": "Your agent will use these instructions to take decision on a token.\n    The decisions can be `buy`, `sell`, `hold` or `pass`.\n    Make sure to keep this description as detailed and clear as possible.\n    "
                    },
                    "decision_prompt_portfolio": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Instructions for taking decision on a portfolio.",
                        "description": "Your agent will use these instructions to revise the deicsions\n    it made on a token.\n    This should be broader set of instructions to guide agent.\n\n    NOTE: This is currently not implemented.\n    "
                    },
                    "twitter_username": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Your Bot's Username.",
                        "description": "Your Twitter Username. In the future this will be used so that\n    your bot can reply and interact on twitter.\n    "
                    },
                    "fc_username": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Your FereAI Username.",
                        "description": "Your FereAI Username. In the future this will be used so that\n    your bot can reply and interact on FereAI.\n    "
                    },
                    "dry_run": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Dry Run Mode.",
                        "description": "If True, your agent will only simulate the trades and will not\n    actually buy or sell any tokens.\n    "
                    },
                    "dry_run_initial_usd": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Initial USD for Dry Run.",
                        "description": "Initial USD amount for Dry Run. This will be used to simulate\n    the trades.\n    "
                    },
                    "max_investment_per_session": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Investment per Session.",
                        "description": "Maximum amount of USD your agent can invest in a single session.\n    "
                    },
                    "stop_loss": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Stop Loss Percentage.",
                        "description": "If the profit goes below this percentage, the agent will sell the token.\n    "
                    },
                    "trailing_stop_loss": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Trailing Stop Loss Percentage.",
                        "description": "If the profit goes below this percentage from the peak, the agent will sell the token.\n    "
                    },
                    "take_profit": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Take Profit Percentage.",
                        "description": "If the profit goes above this percentage, the agent will sell the token.\n    "
                    },
                    "is_active": {
                        "anyOf": [
                            {
                                "type": "boolean"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Is Active.",
                        "description": "Is Active."
                    },
                    "parents": {
                        "anyOf": [
                            {
                                "items": {
                                    "type": "string",
                                    "format": "uuid"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Parent Agents.",
                        "description": "List of Parent Agents. This is used when the agent is in COPY_TRADE mode.\n    The agent will copy the trades of these parent agents.\n    "
                    },
                    "mode": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "integer"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Mode of the Agent.",
                        "description": "Mode of the Agent. It can either be `MANUAL` (`0`), `COPY_TRADE` (`1`) or `AUTONOMOUS` (`2`).\n    In MANUAL mode, the agent will take decisions based on the instructions provided by the user.\n    In COPY_TRADE mode, the agent will copy the trades of another agent.\n    In AUTONOMOUS mode, the agent will take decisions autonomously.\n    "
                    },
                    "investment_for_buy": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Investment per buy in Native currency (SOL or ETH)",
                        "description": "The investment this agent will do per buy. It is in native amount.\n    For Solana agents, it's the SOL that will be spent. For EVM agents, its the\n    ETH that will be spent per buy"
                    },
                    "investment_for_buy_usd": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Investment per buy in USD",
                        "description": "The investment this agent will do per buy. It is in USD amount.\n    "
                    }
                },
                "type": "object",
                "title": "AgentUpdateRequest"
            },
            "BuyDecisionsResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "agent_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Agent Id"
                    },
                    "base_address": {
                        "type": "string",
                        "title": "Base Address"
                    },
                    "pool_address": {
                        "type": "string",
                        "title": "Pool Address"
                    },
                    "pool_name": {
                        "type": "string",
                        "title": "Pool Name"
                    },
                    "token_name": {
                        "type": "string",
                        "title": "Token Name"
                    },
                    "symbol": {
                        "type": "string",
                        "title": "Symbol"
                    },
                    "profile_pic": {
                        "type": "string",
                        "title": "Profile Pic"
                    },
                    "noticed_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Noticed At"
                    },
                    "peaked_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Peaked At"
                    },
                    "notice_price_usd": {
                        "type": "number",
                        "title": "Notice Price Usd"
                    },
                    "notice_price_native": {
                        "type": "number",
                        "title": "Notice Price Native"
                    },
                    "notice_mcap": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Notice Mcap"
                    },
                    "price_usd": {
                        "type": "number",
                        "title": "Price Usd"
                    },
                    "price_native": {
                        "type": "number",
                        "title": "Price Native"
                    },
                    "peak_mcap": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Peak Mcap"
                    },
                    "curr_price_usd": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Curr Price Usd"
                    },
                    "curr_price_native": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Curr Price Native"
                    },
                    "curr_mcap": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Curr Mcap"
                    },
                    "profit_per_usd": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Profit Per Usd"
                    },
                    "profit_per_native": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Profit Per Native"
                    },
                    "dry_run": {
                        "type": "boolean",
                        "title": "Dry Run"
                    },
                    "reason": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Reason"
                    },
                    "future_action": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Future Action"
                    },
                    "confidence": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Confidence"
                    },
                    "entry_signals": {
                        "anyOf": [
                            {
                                "items": {
                                    "additionalProperties": true,
                                    "type": "object"
                                },
                                "type": "array"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Entry Signals"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "agent_id",
                    "base_address",
                    "pool_address",
                    "pool_name",
                    "token_name",
                    "symbol",
                    "profile_pic",
                    "noticed_at",
                    "peaked_at",
                    "notice_price_usd",
                    "notice_price_native",
                    "price_usd",
                    "price_native",
                    "dry_run"
                ],
                "title": "BuyDecisionsResponse"
            },
            "CheckUserAndGetAgentsResponse": {
                "properties": {
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "User Id"
                    },
                    "agents": {
                        "items": {
                            "$ref": "#/components/schemas/AgentResponse"
                        },
                        "type": "array",
                        "title": "Agents"
                    }
                },
                "type": "object",
                "required": [
                    "user_id",
                    "agents"
                ],
                "title": "CheckUserAndGetAgentsResponse"
            },
            "DeploymentDetails": {
                "properties": {
                    "name": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Name of the Deployment",
                        "description": "Name identifying this deployment configuration"
                    },
                    "description": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Description",
                        "description": "Description of this deployment configuration"
                    },
                    "persona": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Persona",
                        "description": "Trading personality/style of this deployment"
                    },
                    "chain": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Blockchain Chain",
                        "description": "The blockchain network this deployment runs on"
                    },
                    "data_source": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Data Source",
                        "description": "Source of trading data - trending or latest"
                    },
                    "decision_prompt_pool": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Pool Decision Logic",
                        "description": "Logic for making trading decisions on token pools"
                    },
                    "decision_prompt_portfolio": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Portfolio Decision Logic",
                        "description": "Logic for managing the overall portfolio"
                    },
                    "twitter_username": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Twitter Username"
                    },
                    "fc_username": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "FereAI Username"
                    },
                    "dry_run": {
                        "type": "boolean",
                        "title": "Dry Run Mode",
                        "default": true
                    },
                    "dry_run_initial_usd": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Initial Native Token Amount"
                    },
                    "max_investment_per_session": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Max Investment Per Session"
                    },
                    "stop_loss": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Stop Loss Percentage"
                    },
                    "trailing_stop_loss": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Trailing Stop Loss Percentage"
                    },
                    "take_profit": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Take Profit Percentage"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active",
                        "description": "Whether this deployment is currently active",
                        "default": true
                    }
                },
                "type": "object",
                "title": "DeploymentDetails"
            },
            "EvmTradeResponse": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "agent_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Agent Id"
                    },
                    "base_address": {
                        "type": "string",
                        "title": "Base Address"
                    },
                    "pool_name": {
                        "type": "string",
                        "title": "Pool Name"
                    },
                    "decision": {
                        "type": "integer",
                        "title": "Decision"
                    },
                    "price_usd": {
                        "type": "number",
                        "title": "Price Usd"
                    },
                    "price_eth": {
                        "type": "number",
                        "title": "Price Eth"
                    },
                    "in_amount": {
                        "type": "number",
                        "title": "In Amount"
                    },
                    "out_amount": {
                        "type": "number",
                        "title": "Out Amount"
                    },
                    "gas_fee": {
                        "type": "number",
                        "title": "Gas Fee"
                    },
                    "txn": {
                        "type": "string",
                        "title": "Txn"
                    },
                    "reason": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Reason"
                    },
                    "future_action": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Future Action"
                    },
                    "profit_eth": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Profit Eth"
                    },
                    "profit_usd": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Profit Usd"
                    },
                    "profit_percentage": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Profit Percentage"
                    },
                    "dry_run": {
                        "type": "boolean",
                        "title": "Dry Run"
                    },
                    "confidence": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Confidence"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "agent_id",
                    "base_address",
                    "pool_name",
                    "decision",
                    "price_usd",
                    "price_eth",
                    "in_amount",
                    "out_amount",
                    "gas_fee",
                    "txn",
                    "dry_run"
                ],
                "title": "EvmTradeResponse"
            },
            "GroupedTradesResponse": {
                "properties": {
                    "base_address": {
                        "type": "string",
                        "title": "Base Address"
                    },
                    "pool_address": {
                        "type": "string",
                        "title": "Pool Address"
                    },
                    "pool_name": {
                        "type": "string",
                        "title": "Pool Name"
                    },
                    "tokens_held": {
                        "type": "number",
                        "title": "Tokens Held"
                    },
                    "buying_price_usd": {
                        "type": "number",
                        "title": "Buying Price Usd"
                    },
                    "profit_usd": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Profit Usd"
                    },
                    "profit_percentage": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Profit Percentage"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active"
                    },
                    "trades": {
                        "anyOf": [
                            {
                                "items": {
                                    "$ref": "#/components/schemas/SolanaTradeResponse"
                                },
                                "type": "array"
                            },
                            {
                                "items": {
                                    "$ref": "#/components/schemas/EvmTradeResponse"
                                },
                                "type": "array"
                            }
                        ],
                        "title": "Trades"
                    }
                },
                "type": "object",
                "required": [
                    "base_address",
                    "pool_address",
                    "pool_name",
                    "tokens_held",
                    "buying_price_usd",
                    "is_active",
                    "trades"
                ],
                "title": "GroupedTradesResponse"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "HeroAgentsResponse": {
                "properties": {
                    "name": {
                        "type": "string",
                        "title": "Name"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active"
                    },
                    "agent_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Agent Id"
                    },
                    "deployment_details": {
                        "$ref": "#/components/schemas/DeploymentDetails"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "is_active",
                    "agent_id",
                    "deployment_details"
                ],
                "title": "HeroAgentsResponse"
            },
            "HoldingResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "bought_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Bought At"
                    },
                    "agent_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Agent Id"
                    },
                    "base_address": {
                        "type": "string",
                        "title": "Base Address"
                    },
                    "pool_address": {
                        "type": "string",
                        "title": "Pool Address"
                    },
                    "pool_name": {
                        "type": "string",
                        "title": "Pool Name"
                    },
                    "token_name": {
                        "type": "string",
                        "title": "Token Name"
                    },
                    "decimals": {
                        "type": "integer",
                        "title": "Decimals"
                    },
                    "tokens_bought": {
                        "type": "number",
                        "title": "Tokens Bought"
                    },
                    "buying_price_usd": {
                        "type": "number",
                        "title": "Buying Price Usd"
                    },
                    "buying_price_native": {
                        "type": "number",
                        "title": "Buying Price Native"
                    },
                    "buying_mcap_usd": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Buying Mcap Usd"
                    },
                    "curr_price_usd": {
                        "type": "number",
                        "title": "Curr Price Usd"
                    },
                    "curr_price_native": {
                        "type": "number",
                        "title": "Curr Price Native"
                    },
                    "curr_mcap_usd": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Curr Mcap Usd"
                    },
                    "profit_abs_usd": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Profit Abs Usd"
                    },
                    "profit_abs_native": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Profit Abs Native"
                    },
                    "profit_per_usd": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Profit Per Usd"
                    },
                    "profit_per_native": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Profit Per Native"
                    },
                    "is_active": {
                        "type": "boolean",
                        "title": "Is Active"
                    },
                    "dry_run": {
                        "type": "boolean",
                        "title": "Dry Run"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "bought_at",
                    "agent_id",
                    "base_address",
                    "pool_address",
                    "pool_name",
                    "token_name",
                    "decimals",
                    "tokens_bought",
                    "buying_price_usd",
                    "buying_price_native",
                    "curr_price_usd",
                    "curr_price_native",
                    "is_active",
                    "dry_run"
                ],
                "title": "HoldingResponse"
            },
            "PaginatedBuyDecisionsResponse": {
                "properties": {
                    "total_count": {
                        "type": "integer",
                        "title": "Total Count"
                    },
                    "buy_decisions": {
                        "items": {
                            "$ref": "#/components/schemas/BuyDecisionsResponse"
                        },
                        "type": "array",
                        "title": "Buy Decisions"
                    }
                },
                "type": "object",
                "required": [
                    "total_count",
                    "buy_decisions"
                ],
                "title": "PaginatedBuyDecisionsResponse"
            },
            "PortfolioResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "agent_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Agent Id"
                    },
                    "start_time": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Start Time"
                    },
                    "start_usd": {
                        "type": "number",
                        "title": "Start Usd"
                    },
                    "start_native": {
                        "type": "number",
                        "title": "Start Native"
                    },
                    "curr_realised_usd": {
                        "type": "number",
                        "title": "Curr Realised Usd"
                    },
                    "curr_realised_native": {
                        "type": "number",
                        "title": "Curr Realised Native"
                    },
                    "curr_unrealised_usd": {
                        "type": "number",
                        "title": "Curr Unrealised Usd"
                    },
                    "curr_unrealised_native": {
                        "type": "number",
                        "title": "Curr Unrealised Native"
                    },
                    "dry_run": {
                        "type": "boolean",
                        "title": "Dry Run"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "agent_id",
                    "start_time",
                    "start_usd",
                    "start_native",
                    "curr_realised_usd",
                    "curr_realised_native",
                    "curr_unrealised_usd",
                    "curr_unrealised_native",
                    "dry_run"
                ],
                "title": "PortfolioResponse"
            },
            "SolanaTradeResponse": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "agent_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Agent Id"
                    },
                    "base_address": {
                        "type": "string",
                        "title": "Base Address"
                    },
                    "pool_name": {
                        "type": "string",
                        "title": "Pool Name"
                    },
                    "decision": {
                        "type": "integer",
                        "title": "Decision"
                    },
                    "price_usd": {
                        "type": "number",
                        "title": "Price Usd"
                    },
                    "price_sol": {
                        "type": "number",
                        "title": "Price Sol"
                    },
                    "in_amount": {
                        "type": "number",
                        "title": "In Amount"
                    },
                    "out_amount": {
                        "type": "number",
                        "title": "Out Amount"
                    },
                    "gas_fee": {
                        "type": "number",
                        "title": "Gas Fee"
                    },
                    "jito_fee": {
                        "type": "number",
                        "title": "Jito Fee"
                    },
                    "other_amount_threshold": {
                        "type": "number",
                        "title": "Other Amount Threshold"
                    },
                    "reason": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Reason"
                    },
                    "future_action": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Future Action"
                    },
                    "profit_sol": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Profit Sol"
                    },
                    "profit_usd": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Profit Usd"
                    },
                    "profit_percentage": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Profit Percentage"
                    },
                    "txn": {
                        "type": "string",
                        "title": "Txn"
                    },
                    "dry_run": {
                        "type": "boolean",
                        "title": "Dry Run"
                    },
                    "confidence": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Confidence"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "agent_id",
                    "base_address",
                    "pool_name",
                    "decision",
                    "price_usd",
                    "price_sol",
                    "in_amount",
                    "out_amount",
                    "gas_fee",
                    "jito_fee",
                    "other_amount_threshold",
                    "txn",
                    "dry_run"
                ],
                "title": "SolanaTradeResponse"
            },
            "TradeRecommendationsResponse": {
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Id"
                    },
                    "agent_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "Agent Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "pool_address": {
                        "type": "string",
                        "title": "Pool Address"
                    },
                    "decision": {
                        "type": "integer",
                        "title": "Decision"
                    },
                    "price_usd": {
                        "type": "number",
                        "title": "Price Usd"
                    },
                    "price_native": {
                        "type": "number",
                        "title": "Price Native"
                    },
                    "reason": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Reason"
                    },
                    "future_action": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Future Action"
                    },
                    "dry_run": {
                        "type": "boolean",
                        "title": "Dry Run"
                    },
                    "confidence": {
                        "anyOf": [
                            {
                                "type": "number"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Confidence"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "agent_id",
                    "created_at",
                    "pool_address",
                    "decision",
                    "price_usd",
                    "price_native",
                    "dry_run"
                ],
                "title": "TradeRecommendationsResponse"
            },
            "UpdateParentRequest": {
                "properties": {
                    "parent_ids": {
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "type": "array",
                        "title": "Parent Ids"
                    }
                },
                "type": "object",
                "required": [
                    "parent_ids"
                ],
                "title": "UpdateParentRequest"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            },
            "WalletDetail": {
                "properties": {
                    "klass": {
                        "type": "string",
                        "title": "Klass",
                        "default": ""
                    },
                    "chain": {
                        "type": "string",
                        "title": "Chain"
                    },
                    "wallet_address": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Wallet Address"
                    },
                    "private_key": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Private Key"
                    }
                },
                "type": "object",
                "required": [
                    "chain"
                ],
                "title": "WalletDetail"
            },
            "src__controllers__schema__WalletDetails": {
                "properties": {
                    "address": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Wallet Address.",
                        "description": "Wallet Address."
                    },
                    "pvt_key": {
                        "anyOf": [
                            {
                                "type": "string"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "title": "Private Key.",
                        "description": "Private Key."
                    }
                },
                "type": "object",
                "title": "WalletDetails"
            },
            "src__schema__WalletDetails": {
                "properties": {
                    "klass": {
                        "type": "string",
                        "title": "Klass",
                        "default": ""
                    },
                    "agent_name": {
                        "type": "string",
                        "title": "Agent Name"
                    },
                    "wallets": {
                        "items": {
                            "$ref": "#/components/schemas/WalletDetail"
                        },
                        "type": "array",
                        "title": "Wallets"
                    }
                },
                "type": "object",
                "required": [
                    "agent_name",
                    "wallets"
                ],
                "title": "WalletDetails"
            }
        }
    }
  }